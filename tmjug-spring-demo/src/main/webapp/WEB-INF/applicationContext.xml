<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop">

    <!-- Root Context: defines shared resources visible to all other web components -->

    <!--
    Activates various annotations to be detected in bean classes:
        - Spring's @Required and @Autowired;
        - JSR 250's @PostConstruct, @PreDestroy and @Resource (if available);
        - JAX-WS's @WebServiceRef (if available);
        - EJB3's @EJB (if available);
        - JPA's @PersistenceContext and @PersistenceUnit (if available);
    -->
    <context:annotation-config/>

     <!-- Scans within the base package of the application for @Components to configure as beans -->
	 <!-- @Controller, @Service, @Configuration, @Component, @Repository, etc. -->
    <context:component-scan base-package="org.tmjug"/>

    <!-- Read the ${...} placeholders from the specified .properties files [comma separated] -->
    <context:property-placeholder location="classpath:database/database-connection.properties"/>

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- Enables transaction management for the methods annotated with @Transactional -->
    <tx:annotation-driven/>

    <!-- Enables AspectJ AOP auto-proxying for classes which are advised with aspects declared via classes annotated with @Aspect -->
    <aop:aspectj-autoproxy/>

    <!-- Start the H2 database server -->
    <import resource="applicationContext-h2-database.xml"/>

    <!-- Import the data source definition -->
    <import resource="applicationContext-dataSources.xml"/>
</beans>